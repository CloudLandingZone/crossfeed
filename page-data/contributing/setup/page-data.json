{"componentChunkName":"component---src-templates-documentation-page-js","path":"/contributing/setup/","result":{"data":{"markdownRemark":{"html":"<h3 id=\"quickstart\" style=\"position:relative;\"><a href=\"#quickstart\" aria-label=\"quickstart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quickstart</h3>\n<ol>\n<li>Install <a href=\"https://nodejs.org/en/download/\">Node.js</a> and <a href=\"https://docs.docker.com/compose/install/\">Docker Compose</a>.</li>\n<li>\n<p>Copy root <code class=\"language-text\">dev.env.example</code> file to a <code class=\"language-text\">.env</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cp</span> dev.env.example .env</code></pre></div>\n</li>\n<li>\n<p>Build the crossfeed-worker Docker image:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> backend <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> run build-worker</code></pre></div>\n</li>\n<li>\n<p>Start the entire environment from the root directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> start</code></pre></div>\n</li>\n<li>\n<p>Generate the initial DB schema and populate it with sample data:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> backend\n<span class=\"token comment\"># Generate schema</span>\n<span class=\"token function\">npm</span> run syncdb\n<span class=\"token comment\"># Populate sample data</span>\n<span class=\"token function\">npm</span> run syncdb -- -d populate</code></pre></div>\n<p>If you are on Windows, the above commands may not work. Instead, you should run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> backend\n<span class=\"token comment\"># Generate schema</span>\ndocker-compose <span class=\"token builtin class-name\">exec</span> backend npx sls invoke <span class=\"token builtin class-name\">local</span> -f syncdb\n<span class=\"token comment\"># Populate sample data</span>\ndocker-compose <span class=\"token builtin class-name\">exec</span> backend npx sls invoke <span class=\"token builtin class-name\">local</span> -f syncdb -d populate</code></pre></div>\n<p>If you ever need to drop and recreate the database, you can run <code class=\"language-text\">npm run syncdb -- -d dangerouslyforce</code>.</p>\n</li>\n<li>Navigate to <a href=\"http://localhost\">http://localhost</a> in a browser.</li>\n<li>\n<p>Hot reloading for source files is enabled, but after changes to non-source code files stopping and starting Docker Compose is required. The following are examples of changes that will require restarting the environment:</p>\n<ul>\n<li>Frontend or backend dependency changes</li>\n<li>Backend changes to <code class=\"language-text\">serverless.yml</code> or <code class=\"language-text\">env.yml</code></li>\n<li>Environment variables in root <code class=\"language-text\">.env</code></li>\n</ul>\n</li>\n<li>Install <a href=\"https://www.robinwieruch.de/how-to-use-prettier-vscode\">Prettier</a> in your dev environment to format code on save.</li>\n</ol>\n<h4 id=\"running-tests\" style=\"position:relative;\"><a href=\"#running-tests\" aria-label=\"running tests permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running tests</h4>\n<p>To run tests, first make sure you have already started Crossfeed with <code class=\"language-text\">npm start</code> (or, at bare minimum, that the database container is running). Then run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> backend\n<span class=\"token function\">npm</span> <span class=\"token builtin class-name\">test</span></code></pre></div>\n<p>If snapshot tests fail, update snapshots by running <code class=\"language-text\">npm test -- -u</code>.</p>\n<p>To run tests for the subset of worker code that is written in Python, you need to run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> -r worker/requirements.txt\npytest</code></pre></div>\n<p>To view a code coverage report (a minimum code coverage threshold is checked in CI), run <code class=\"language-text\">npm test -- --collectCoverage</code>.</p>\n<p>You can then view a HTML coverage report in the <code class=\"language-text\">coverage/lcov-report</code> directory.</p>\n<h4 id=\"monitoring-docker-logs\" style=\"position:relative;\"><a href=\"#monitoring-docker-logs\" aria-label=\"monitoring docker logs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Monitoring Docker logs</h4>\n<p>To check Docker containers, you can run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=root data-host=localhost></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span>docker <span class=\"token function\">ps</span>\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\n2a155c5bb9ce        crossfeed_backend                                     <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">13</span> minutes ago      Up <span class=\"token number\">13</span> minutes       <span class=\"token number\">0.0</span>.0.0:3000-<span class=\"token operator\">></span><span class=\"token number\">3000</span>/tcp                           crossfeed_backend_1\n0177dff83a80        docker.elastic.co/elasticsearch/elasticsearch:7.9.0   <span class=\"token string\">\"/tini -- /usr/local…\"</span>   <span class=\"token number\">13</span> minutes ago      Up <span class=\"token number\">13</span> minutes       <span class=\"token number\">0.0</span>.0.0:9200-<span class=\"token operator\">></span><span class=\"token number\">9200</span>/tcp, <span class=\"token number\">0.0</span>.0.0:9300-<span class=\"token operator\">></span><span class=\"token number\">9300</span>/tcp   crossfeed_es_1\nc0f3dee36d5e        crossfeed_frontend                                    <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">13</span> minutes ago      Up <span class=\"token number\">13</span> minutes       <span class=\"token number\">0.0</span>.0.0:80-<span class=\"token operator\">></span><span class=\"token number\">3000</span>/tcp                             crossfeed_frontend_1\nf3491e1b547e        matomo:3.14.1                                         <span class=\"token string\">\"/entrypoint.sh apac…\"</span>   <span class=\"token number\">13</span> minutes ago      Up <span class=\"token number\">13</span> minutes       <span class=\"token number\">80</span>/tcp                                           crossfeed_matomo_1\nc3ed457a71d2        postgres:latest                                       <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">13</span> minutes ago      Up <span class=\"token number\">13</span> minutes       <span class=\"token number\">0.0</span>.0.0:5432-<span class=\"token operator\">></span><span class=\"token number\">5432</span>/tcp                           crossfeed_db_1\n98c14a4f8886        mariadb:10.5                                          <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">13</span> minutes ago      Up <span class=\"token number\">13</span> minutes       <span class=\"token number\">3306</span>/tcp                                         crossfeed_matomodb_1\n9f70dbdbe867        crossfeed_docs                                        <span class=\"token string\">\"docker-entrypoint.s…\"</span>   <span class=\"token number\">13</span> minutes ago      Up <span class=\"token number\">13</span> minutes       <span class=\"token number\">0.0</span>.0.0:4000-<span class=\"token operator\">></span><span class=\"token number\">4000</span>/tcp                           crossfeed_docs_1\n746956c514ed        bitnami/minio:2020.9.26                               <span class=\"token string\">\"/opt/bitnami/script…\"</span>   <span class=\"token number\">13</span> minutes ago      Up <span class=\"token number\">13</span> minutes       <span class=\"token number\">0.0</span>.0.0:9000-<span class=\"token operator\">></span><span class=\"token number\">9000</span>/tcp                           crossfeed_minio_1</code></pre></div>\n<p>You can then check the logs of a particular container by specifying a container's name with the <code class=\"language-text\">docker logs</code> command. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker logs crossfeed_backend_1 --follow</code></pre></div>\n<h3 id=\"running-scans-locally\" style=\"position:relative;\"><a href=\"#running-scans-locally\" aria-label=\"running scans locally permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running scans locally</h3>\n<p>In order to run scans locally or work on scanning infrastructure,\nyou will need to set up the Fargate worker and rebuild it periodically\nwhen worker code changes.</p>\n<h4 id=\"building-the-worker-docker-image\" style=\"position:relative;\"><a href=\"#building-the-worker-docker-image\" aria-label=\"building the worker docker image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building the worker Docker image</h4>\n<p>Each time you make changes to the worker code, you should run the following command to re-build the worker docker image:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run build-worker</code></pre></div>\n<h4 id=\"running-workers-locally\" style=\"position:relative;\"><a href=\"#running-workers-locally\" aria-label=\"running workers locally permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running workers locally</h4>\n<p>To run a worker locally, just create a scan from the Crossfeed UI.\nWhen running locally, the scheduler function runs every 30 seconds, for convenience, so it will\nstart your worker soon. To manually trigger a run immediately, click on the \"Manually run scheduler\" button on the Scans page.</p>\n<p>Once a worker has started, it is accessible as a running Docker container.\nYou can examine it by running <code class=\"language-text\">docker ps</code> or ( <code class=\"language-text\">docker ps -a | head -n 3</code> for stopped workers ) to view Docker containers.\nand check its logs with <code class=\"language-text\">docker logs [containername]</code> .</p>\n<p>You can check the scheduler logs locally by checking the backend container logs.</p>\n<h4 id=\"generating-censys-types\" style=\"position:relative;\"><a href=\"#generating-censys-types\" aria-label=\"generating censys types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generating censys types</h4>\n<p>The <code class=\"language-text\">censysIpv4.ts</code> and <code class=\"language-text\">censysCertificates.ts</code> type files in the <code class=\"language-text\">backend/src/models/generated</code> files have been\nautomatically generated from Censys's published schemas. If you need to re-generate these type files, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run codegen</code></pre></div>\n<h3 id=\"documentation\" style=\"position:relative;\"><a href=\"#documentation\" aria-label=\"documentation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Documentation</h3>\n<p>The documentation files are stored in the <code class=\"language-text\">docs</code> directory and served from a Gatsby site. To work on this, you should run <code class=\"language-text\">npm start</code> from before. You can then open up <a href=\"http://localhost:4000\">http://localhost:4000</a> in your browser to view the docs.</p>\n<p>The docs are based on the <a href=\"https://github.com/18F/federalist-uswds-gatsby\">federalist-uswds-gatsby</a> theme. See that repository for more information on additional theme customizations that can be done.</p>\n<h3 id=\"matomo-for-analytics\" style=\"position:relative;\"><a href=\"#matomo-for-analytics\" aria-label=\"matomo for analytics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Matomo for Analytics</h3>\n<p><a href=\"https://matomo.org/\">Matomo</a> is an open source analytics platform. We host an instance of Matomo as part of Crossfeed to collect analytics\non its usage.</p>\n<p>Before you run Matomo for the first time locally, you must run <code class=\"language-text\">./setup-matomo.sh</code>.</p>\n<p>You can access Matomo by clicking on the \"Matomo\" button from the \"My Account\" page. Click\nthrough the original setup (keep the default values for database connection, etc.),\nthen set the superuser username and password to \"root\" and \"password\" (for development only; for deployment to production, you should generate a random password).</p>\n<h3 id=\"kibana\" style=\"position:relative;\"><a href=\"#kibana\" aria-label=\"kibana permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kibana</h3>\n<p>By default, Kibana is disabled because it adds a lot of overhead to local development and isn't required for normally running Crossfeed locally.</p>\n<p>If you want to view a local version of Kibana (if you, for example, want to inspect the data of the local Elasticsearch instance), you should first uncomment the \"kib\" section of <code class=\"language-text\">docker-compose.yml</code> and then navigate to <a href=\"http://localhost:5601\">http://localhost:5601</a>.</p>","frontmatter":{"title":"Development Setup","sidenav":"contributing"},"fields":{"slug":"/contributing/setup/"},"headings":[{"value":"Quickstart","depth":3},{"value":"Running tests","depth":4},{"value":"Monitoring Docker logs","depth":4},{"value":"Running scans locally","depth":3},{"value":"Building the worker Docker image","depth":4},{"value":"Running workers locally","depth":4},{"value":"Generating censys types","depth":4},{"value":"Documentation","depth":3},{"value":"Matomo for Analytics","depth":3},{"value":"Kibana","depth":3}]}},"pageContext":{"name":"setup"}},"staticQueryHashes":["1824138477","561523179","63159454"]}